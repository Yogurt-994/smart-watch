// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.3.2
// LVGL version: 8.2.0
// Project name: SquareLine_Project

#include "ui.h"
#include "ui_helpers.h"
#include "main.h"

///////////////////// VARIABLES ////////////////////

// SCREEN: ui_ScreenHome
void ui_ScreenHome_screen_init(void);
void ui_SrceenHome_load_date(void);
void ui_event_ScreenHome(lv_event_t *e);
lv_obj_t *ui_ScreenHome;
lv_obj_t *ui_PanelElectric;
lv_obj_t *ui_ArcElectric;
lv_obj_t *ui_LabelElectric;
lv_obj_t *ui_ImageElectric;
lv_obj_t *ui_PanelDate;
lv_obj_t *ui_LabelSymbol;
lv_obj_t *ui_LabelDate;
lv_obj_t *ui_LabelWeek;
lv_obj_t *ui_LabelHour;
lv_obj_t *ui_LabelMinute;
lv_obj_t *ui_PanelStep;
lv_obj_t *ui_ImageStep;
lv_obj_t *ui_LabelStep;
void ui_event_SliderStep(lv_event_t *e);
lv_obj_t *ui_SliderStep;
lv_obj_t *ui_PanelWeather;
void ui_event_ArcTem(lv_event_t *e);
lv_obj_t *ui_ArcTem;
lv_obj_t *ui_ImageTem;
lv_obj_t *ui_LabelTem;
void ui_event_ArcHum(lv_event_t *e);
lv_obj_t *ui_ArcHum;
lv_obj_t *ui_ImageHum;
lv_obj_t *ui_LabelHum;
void ui_event_ArcAQI(lv_event_t *e);
lv_obj_t *ui_ArcAQI;
lv_obj_t *ui_ImageAQI;
lv_obj_t *ui_LabelAQI;

// SCREEN: ui_ScreenMenu
void ui_ScreenMenu_screen_init(void);
void ui_event_ScreenMenu(lv_event_t *e);
lv_obj_t *ui_ScreenMenu;
lv_obj_t *ui_PanelMenu;
void ui_event_PanelWeaIcon(lv_event_t *e);
lv_obj_t *ui_PanelWeaIcon;
lv_obj_t *ui_ImageWeaIcon;
lv_obj_t *ui_LabelWeaIcon;
void ui_event_PanelRemoteIcon(lv_event_t *e);
lv_obj_t *ui_PanelRemoteIcon;
lv_obj_t *ui_ImageRemoteIcon;
lv_obj_t *ui_LabelRemoteIcon;
void ui_event_PanelAboutIcon(lv_event_t * e);
lv_obj_t * ui_PanelAboutIcon;
lv_obj_t * ui_ImageAboutIcon;
lv_obj_t * ui_LabelAboutIcon;
void ui_event_PanelCalendarIcon(lv_event_t * e);
lv_obj_t * ui_PanelCalendarIcon;
lv_obj_t * ui_ImageCalendarIcon;
lv_obj_t * ui_LabelCalendarIcon;

// SCREEN: ui_ScreenWeather
void ui_ScreenWeather_screen_init(void);
void ui_event_ScreenWeather(lv_event_t *e);
lv_obj_t *ui_ScreenWeather;
lv_obj_t *ui_PanelBase;
lv_obj_t *ui_LabelLocation;
lv_obj_t *ui_ImageLocation;
lv_obj_t *ui_LabelTemp;
lv_obj_t *ui_LabelDegree;
lv_obj_t *ui_LabelSplit;
lv_obj_t *ui_LabelWea;
lv_obj_t *ui_LabelAir;
lv_obj_t *ui_PanelWeaTimePre;
lv_obj_t *ui_LabelTime1;
lv_obj_t *ui_LabelTime2;
lv_obj_t *ui_LabelTime3;
lv_obj_t *ui_LabelTime4;
lv_obj_t *ui_LabelTimeWea1;
lv_obj_t *ui_LabelTimeWea2;
lv_obj_t *ui_LabelTimeWea3;
lv_obj_t *ui_LabelTimeWea4;
lv_obj_t *ui_LabelDegree1;
lv_obj_t *ui_LabelDegree2;
lv_obj_t *ui_LabelDegree3;
lv_obj_t *ui_LabelDegree4;
lv_obj_t *ui_PanelWeaDayPre;
lv_obj_t *ui_LabelYesterday;
lv_obj_t *ui_LabelYesWea;
lv_obj_t *ui_LabelYesTem;
lv_obj_t *ui_LabelToday;
lv_obj_t *ui_LabelTomorrow;
lv_obj_t *ui_LabelTodayWea;
lv_obj_t *ui_LabelTomWea;
lv_obj_t *ui_LabelTodayTem;
lv_obj_t *ui_LabelTomTem;

// SCREEN: ui_ScreenRemote
void ui_ScreenRemote_screen_init(void);
void ui_event_ScreenRemote(lv_event_t *e);
lv_obj_t *ui_ScreenRemote;
lv_obj_t *ui_PanelMusic;
lv_obj_t *ui_ImageMusicIcon;
lv_obj_t *ui_LabelMusic;
lv_obj_t *ui_ImgButtonNext;
lv_obj_t *ui_ImgButtonPause;
lv_obj_t *ui_ImgButtonPrior;

// SCREEN: ui_ScreenAbout
void ui_ScreenAbout_screen_init(void);
void ui_event_ScreenAbout(lv_event_t * e);
lv_obj_t * ui_ScreenAbout;
lv_obj_t * ui_ImageYogurt;
lv_obj_t * ui_LabelYogurt;
lv_obj_t * ui_LabelName;
lv_obj_t * ui_LabelVersion;
lv_obj_t * ui_LabelProcessor;


// SCREEN: ui_ScreenCalendar
void ui_ScreenCalendar_screen_init(void);
void ui_event_ScreenCalendar(lv_event_t * e);
lv_obj_t * ui_ScreenCalendar;
lv_obj_t * ui_Calendar;
lv_obj_t *ui____initial_actions0;
const lv_img_dsc_t *ui_imgset_flash[2] = {&ui_img_flash2_png, &ui_img_flash3_png};
const lv_img_dsc_t *ui_imgset_location[1] = {&ui_img_location2_png};
const lv_img_dsc_t *ui_imgset_temp[1] = {&ui_img_temp2_png};
const lv_img_dsc_t *ui_imgset_next[1] = {&ui_img_next2_png};

///////////////////// TEST LVGL SETTINGS ////////////////////
#if LV_COLOR_DEPTH != 16
#error "LV_COLOR_DEPTH should be 16bit to match SquareLine Studio's settings"
#endif
#if LV_COLOR_16_SWAP != 0
#error "LV_COLOR_16_SWAP should be 0 to match SquareLine Studio's settings"
#endif

///////////////////// ANIMATIONS ////////////////////

///////////////////// FUNCTIONS ////////////////////
void ui_event_ScreenHome(lv_event_t *e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t *target = lv_event_get_target(e);
    if (event_code == LV_EVENT_GESTURE && lv_indev_get_gesture_dir(lv_indev_get_act()) == LV_DIR_LEFT)
    {
        lv_indev_wait_release(lv_indev_get_act());
        _ui_screen_change(&ui_ScreenMenu, LV_SCR_LOAD_ANIM_MOVE_LEFT, 100, 0, &ui_ScreenMenu_screen_init);
    }
}
void ui_event_ArcTem(lv_event_t *e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t *target = lv_event_get_target(e);
    if (event_code == LV_EVENT_VALUE_CHANGED)
    {
        _ui_arc_set_text_value(ui_LabelTem, target, "", "Â°");
    }
}
void ui_event_ArcHum(lv_event_t *e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t *target = lv_event_get_target(e);
    if (event_code == LV_EVENT_VALUE_CHANGED)
    {
        _ui_arc_set_text_value(ui_LabelHum, target, "", "%");
    }
}
void ui_event_ArcAQI(lv_event_t *e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t *target = lv_event_get_target(e);
    if (event_code == LV_EVENT_VALUE_CHANGED)
    {
        _ui_arc_set_text_value(ui_LabelAQI, target, "", "");
    }
}
void ui_event_ScreenMenu(lv_event_t *e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t *target = lv_event_get_target(e);
    if (event_code == LV_EVENT_GESTURE && lv_indev_get_gesture_dir(lv_indev_get_act()) == LV_DIR_RIGHT)
    {
        lv_indev_wait_release(lv_indev_get_act());
        _ui_screen_change(&ui_ScreenHome, LV_SCR_LOAD_ANIM_MOVE_RIGHT, 100, 0, &ui_ScreenHome_screen_init);
    }
}
void ui_event_PanelWeaIcon(lv_event_t *e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t *target = lv_event_get_target(e);
    if (event_code == LV_EVENT_CLICKED)
    {
        _ui_screen_change(&ui_ScreenWeather, LV_SCR_LOAD_ANIM_MOVE_LEFT, 100, 0, &ui_ScreenWeather_screen_init);
    }
}
void ui_event_PanelRemoteIcon(lv_event_t *e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t *target = lv_event_get_target(e);
    if (event_code == LV_EVENT_CLICKED)
    {
        _ui_screen_change(&ui_ScreenRemote, LV_SCR_LOAD_ANIM_MOVE_LEFT, 100, 0, &ui_ScreenRemote_screen_init);
        // xEventGroupClearBits(switch_event_group, EVENT_BIT_TASK_WIFI);
        // xEventGroupSetBits(switch_event_group, EVENT_BIT_TASK_BLE);
    }
}
void ui_event_PanelAboutIcon(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = lv_event_get_target(e);
    if(event_code == LV_EVENT_CLICKED) {
        _ui_screen_change(&ui_ScreenAbout, LV_SCR_LOAD_ANIM_MOVE_LEFT, 100, 0, &ui_ScreenAbout_screen_init);
    }
}
void ui_event_PanelCalendarIcon(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = lv_event_get_target(e);
    if(event_code == LV_EVENT_CLICKED) {
        _ui_screen_change(&ui_ScreenCalendar, LV_SCR_LOAD_ANIM_MOVE_LEFT, 100, 0, &ui_ScreenCalendar_screen_init);
    }
}
void ui_event_ScreenWeather(lv_event_t *e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t *target = lv_event_get_target(e);
    if (event_code == LV_EVENT_GESTURE && lv_indev_get_gesture_dir(lv_indev_get_act()) == LV_DIR_RIGHT)
    {
        lv_indev_wait_release(lv_indev_get_act());
        _ui_screen_change(&ui_ScreenMenu, LV_SCR_LOAD_ANIM_MOVE_RIGHT, 100, 0, &ui_ScreenMenu_screen_init);
    }
}
void ui_event_ScreenRemote(lv_event_t *e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t *target = lv_event_get_target(e);
    if (event_code == LV_EVENT_GESTURE && lv_indev_get_gesture_dir(lv_indev_get_act()) == LV_DIR_RIGHT)
    {
        lv_indev_wait_release(lv_indev_get_act());
        _ui_screen_change(&ui_ScreenMenu, LV_SCR_LOAD_ANIM_MOVE_RIGHT, 100, 0, &ui_ScreenMenu_screen_init);
    }
}
void ui_event_ScreenAbout(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = lv_event_get_target(e);
    if(event_code == LV_EVENT_GESTURE &&  lv_indev_get_gesture_dir(lv_indev_get_act()) == LV_DIR_RIGHT) {
        lv_indev_wait_release(lv_indev_get_act());
        _ui_screen_change(&ui_ScreenMenu, LV_SCR_LOAD_ANIM_OVER_RIGHT, 100, 0, &ui_ScreenMenu_screen_init);
    }
}
void ui_event_ScreenCalendar(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = lv_event_get_target(e);
    if(event_code == LV_EVENT_GESTURE &&  lv_indev_get_gesture_dir(lv_indev_get_act()) == LV_DIR_RIGHT) {
        lv_indev_wait_release(lv_indev_get_act());
        _ui_screen_change(&ui_ScreenMenu, LV_SCR_LOAD_ANIM_MOVE_RIGHT, 100, 0, &ui_ScreenMenu_screen_init);
    }
}

///////////////////// SCREENS ////////////////////

void ui_init(void)
{
    lv_disp_t *dispp = lv_disp_get_default();
    lv_theme_t *theme = lv_theme_default_init(dispp, lv_palette_main(LV_PALETTE_BLUE), lv_palette_main(LV_PALETTE_RED), true, LV_FONT_DEFAULT);
    lv_disp_set_theme(dispp, theme);
    ui_ScreenHome_screen_init();
    // ui_ScreenMenu_screen_init();
    // ui_ScreenWeather_screen_init();
    ui____initial_actions0 = lv_obj_create(NULL);
    lv_disp_load_scr(ui_ScreenHome);
}
